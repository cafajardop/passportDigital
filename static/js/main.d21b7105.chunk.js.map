{"version":3,"sources":["components/shared/Header.js","types/index.js","http/http.js","config/axios.js","actions/usuarioActions.js","components/Usuario.js","components/Usuarios.js","actions/alertaActions.js","components/NuevoUsuario.js","components/EditarUsuario.js","actions/estadoLoginActions.js","components/Login.js","components/shared/NavBar.js","components/ira-form.js","reducers/usuariosReducer.js","reducers/alertaReducer.js","reducers/loginReducer.js","reducers/index.js","store.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Header","className","to","AGREGAR_USUARIO","AGREGAR_USUARIO_EXITO","AGREGAR_USUARIO_ERROR","COMENZAR_OBTENER_USUARIOS","DESCARGA_USUARIOS_EXITO","DESCARGA_USUARIOS_ERROR","OBTENER_USUARIO_ELIMINAR","USUARIO_ELIMINADO_EXITO","USUARIO_ELIMINADO_ERROR","OBTENER_USUARIO_EDITAR","USUARIO_EDITADO_EXITO","USUARIO_EDITADO_ERROR","LOGIN_EXITO","MOSTRAR_ALERTA","OCULTAR_ALERTA","URL","baseURL","http","get","action","axios","then","response","catch","error","console","log","post","params","put","delete","agreagarUsuario","type","payload","agregarUsuarioExito","usuario","agregarUsuarioError","estado","obtenerUsuarios","getUsuariosExito","usuarios","getUsuariosError","obtenerUsuarioEliminar","id","eliminarUsuarioExito","eliminarUsuarioError","obtenerUsuarioEditar","editarUsuario","editarUsuarioExito","editarUsuarioError","Usuario","nombre","cedula","dispatch","useDispatch","history","useHistory","confirmarEliminarUsuario","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","a","resp","err","borrarUsuarioAction","redireccionarEdicion","obtenerUsuarioEditarAction","push","onClick","Usuarios","useEffect","data","useSelector","state","cargando","loading","scope","length","colSpan","map","mostrarAlertaAction","alerta","mostrarAlertaError","ocultarAlertaAction","ocultarAlerta","NuevoUsuario","props","useState","guardarnombre","guardarCedula","agregarUsuario","crearNuevoUsuarioAction","classes","msg","onSubmit","e","preventDefault","trim","info","placeholder","name","value","onChange","target","EditarUsuario","guardarUsuario","usuarioEditar","onChangeFormulario","editarUsuarioAction","mostrarEstadoLoginAction","login","mostrarloginError","Contenedor","styled","div","Login","NavBar","Fragment","onSelect","selected","location","pathname","Toggle","Nav","defaultSelected","eventKey","style","fontSize","children","IraForm","db","firstname","lastname","names","setNames","version","stores","formData","transaction","dbFirstname","dbLastname","add","stack","close","setName","prevNames","handleSetName","initialState","usuarioEliminar","adminAlert","combineReducers","filter","alertaReducer","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","render","Dexie","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.d21b7105.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark justify-content-between\">\n        <div className=\"container\">\n          <h1>\n              <Link to={'/'} \n                    className=\"text-black\">Pasaporte Digital\n              </Link>\n          </h1>\n        </div>\n\n        <Link \n          to={\"/usuarios/nuevo\"}\n          className=\"btn btn-danger nuevo-post d-block d-md-inline-block\">\n            Nuevo Usuario &#43;\n        </Link>\n    </nav>\n  );\n}\n \nexport default Header;","export const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\nexport const AGREGAR_USUARIO_EXITO  = 'AGREGAR_USUARIO_EXITO';\nexport const AGREGAR_USUARIO_ERROR  = 'AGREGAR_USUARIO_ERROR';\n\nexport const COMENZAR_OBTENER_USUARIOS = 'COMENZAR_OBTENER_USUARIOS';\nexport const DESCARGA_USUARIOS_EXITO = 'DESCARGA_USUARIOS_EXITO';\nexport const DESCARGA_USUARIOS_ERROR = 'DESCARGA_USUARIOS_ERROR';\n\nexport const OBTENER_USUARIO_ELIMINAR = 'OBTENER_USUARIO_ELIMINAR';\nexport const USUARIO_ELIMINADO_EXITO = 'USUARIO_ELIMINADO_EXITO';\nexport const USUARIO_ELIMINADO_ERROR = 'USUARIO_ELIMINADO_ERROR';\n\nexport const OBTENER_USUARIO_EDITAR = 'OBTENER_USUARIO_EDITAR';\nexport const COMENZAR_EDITAR_USUARIO = 'COMENZAR_EDITAR_USUARIO';\nexport const USUARIO_EDITADO_EXITO = 'USUARIO_EDITADO_EXITO';\nexport const USUARIO_EDITADO_ERROR = 'USUARIO_EDITADO_ERROR';\n\n/**Login Exito */\nexport const LOGIN_EXITO = 'LOGIN_EXITO';\n\n/**Alertas */\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\n","import axios from 'axios';\nimport clientAxios from '../config/axios';\n\n/*const headers = {\n    'Content-Type': 'application/json'\n}*/\n\nconst URL = clientAxios.baseURL;\n\nconst get = (action) => {\n    return axios.get(URL + action)\n        .then((response) => {\n            return response;\n        }).catch(error => {\n            console.log(error);\n        });\n}\n\nconst post = (action, params) => {\n    return axios.post(URL + action, params)\n        .then(response => {\n            return response;\n        }).catch(error => {\n            console.log(error);\n        });\n}\n\nconst put = (action, params) => {\n    return axios.put(URL + action, params)\n        .then(response => {\n            return response;\n        }).catch(error => {\n            console.log(error);\n        });\n}\n\nconst _delete = (action, params) => {\n    return axios.put(URL + action, params)\n        .then(response => {\n            return response;\n        }).catch(error => {\n            console.log(error);\n        });\n}\n\nconst http = {\n    get,\n    post,\n    put,\n    delete: _delete\n};\n\nexport default http;\n","\nconst clienteAxios = {\n  baseURL:'http://localhost:4000/'\n};\n\nexport default clienteAxios;\n","import {\n  AGREGAR_USUARIO,\n  AGREGAR_USUARIO_EXITO,\n  AGREGAR_USUARIO_ERROR,\n  COMENZAR_OBTENER_USUARIOS,\n  DESCARGA_USUARIOS_EXITO,\n  DESCARGA_USUARIOS_ERROR,\n  OBTENER_USUARIO_ELIMINAR,\n  USUARIO_ELIMINADO_EXITO,\n  USUARIO_ELIMINADO_ERROR,\n  OBTENER_USUARIO_EDITAR,\n  COMENZAR_EDITAR_USUARIO,\n  USUARIO_EDITADO_EXITO,\n  USUARIO_EDITADO_ERROR\n} from \"../types\";\n\nimport http from \"../http/http\";\nimport Swal from \"sweetalert2\";\n\n/**Creacion de usuarios */\nexport function crearNuevoUsuarioAction(usuario) {\n  return async (dispatch) => {\n    dispatch(agreagarUsuario());\n    /**Consulta a la base de datos */\n    http.post(\"usuarios\", usuario).then( resp => {\n      dispatch(agregarUsuarioExito(usuario));\n      Swal.fire(\n          \"Correcto\",\n          `El Usuario con el id: ${usuario.cedula} se creo correctamente`,\n          \"success\"\n      );\n    }).catch(err => {\n      console.log(err);\n      dispatch(agregarUsuarioError(true));\n      Swal.fire({\n        icon: \"error\",\n        title: \"Hubo un error\",\n        text: \"Hubo un error, intenta de nuevo\",\n      });\n    });\n  };\n}\n\nconst agreagarUsuario = () => ({\n  type: AGREGAR_USUARIO,\n  payload: true,\n});\n\n/**Si usuario se guarda en la base de datos */\nconst agregarUsuarioExito = (usuario) => ({\n  type: AGREGAR_USUARIO_EXITO,\n  payload: usuario,\n});\n\n/**Si hay error */\nconst agregarUsuarioError = (estado) => ({\n  type: AGREGAR_USUARIO_ERROR,\n  payload: estado,\n});\n\n/**Función que obtiene los usuarios de la BD */\nexport function obtenerUsuariosAction() {\n  return async (dispatch) => {\n    dispatch(obtenerUsuarios());\n    http.get(\"usuarios\").then(response => {\n      dispatch(getUsuariosExito(response.data));\n    }).catch(err => {\n      console.log(err);\n      dispatch(getUsuariosError());\n    });\n  };\n}\n\nconst obtenerUsuarios = () => ({\n  type: COMENZAR_OBTENER_USUARIOS,\n  payload: true,\n});\n\nconst getUsuariosExito = (usuarios) => ({\n  type: DESCARGA_USUARIOS_EXITO,\n  payload: usuarios,\n});\n\nconst getUsuariosError = () => ({\n  type: DESCARGA_USUARIOS_ERROR,\n  payload: true,\n});\n\n\n/**Selecciona y elimina usuario */\nexport function borrarUsuarioAction(id){\n  return async (dispatch) => {\n    dispatch(obtenerUsuarioEliminar(id));\n    http.delete(`usuarios/${id}`).then(resp => {\n      dispatch( eliminarUsuarioExito());\n      Swal.fire(\n          'Eliminado!',\n          'El usuario se eliminó correctamente.',\n          'success'\n      )\n    }).catch(err => {\n      console.log(err);\n      dispatch( eliminarUsuarioError() );\n    });\n  }\n}\n\nconst obtenerUsuarioEliminar = id => ({\n  type: OBTENER_USUARIO_ELIMINAR,\n  payload: id\n});\n\nconst eliminarUsuarioExito = () =>({\n    type:USUARIO_ELIMINADO_EXITO\n})\n\nconst eliminarUsuarioError = () => ({\n  type: USUARIO_ELIMINADO_ERROR,\n  payload: true\n})\n\n//**Edición de usuario */\nexport function obtenerUsuarioEditarAction(usuario){\n  return(dispatch)=>{\n    dispatch(obtenerUsuarioEditar(usuario))\n  }\n}\n\nconst obtenerUsuarioEditar = usuario => ({\n  type: OBTENER_USUARIO_EDITAR,\n  payload: usuario\n})\n\n/**Actualiza un registro en la api y state */\nexport function editarUsuarioAction(usuario){\n  return async (dispatch) =>{\n    dispatch(editarUsuario(usuario));\n    http.put(`usuarios/${usuario.id}`, usuario).then(resp => {\n      dispatch(editarUsuarioExito(usuario));\n    }).catch(err => {\n      console.log(err);\n      dispatch(editarUsuarioError())\n    });\n  }\n}\n\nconst editarUsuario = usuario => ({\n  type: COMENZAR_EDITAR_USUARIO,\n  payload: usuario\n});\n\nconst editarUsuarioExito = usuario => ({\n  type:USUARIO_EDITADO_EXITO,\n  payload:usuario\n});\n\nconst editarUsuarioError = () => ({\n  type: USUARIO_EDITADO_ERROR,\n  payload: true\n});\n\n","import React from 'react';\nimport {useHistory} from 'react-router-dom'\nimport Swal from 'sweetalert2';\n\n/**Redux */\nimport {useDispatch} from 'react-redux';\nimport {borrarUsuarioAction,obtenerUsuarioEditarAction} from '../actions/usuarioActions'; \n\n const Usuario = ({usuario}) => {\n   const { nombre, cedula , id } = usuario\n\n   const dispatch = useDispatch();\n   const history = useHistory();/**Habilitar history para redirección */\n\n   /**Confirmacion de eliminar el usuario */\n   const confirmarEliminarUsuario = id => {\n\n    Swal.fire({\n      title: 'Esta seguro?',\n      text: \"Un usuario que se elimina no se puede recuperar!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, eliminar!',\n      cancelButtonText:'Cancelar'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        /**Pasarlo al action */\n          dispatch(borrarUsuarioAction(id));        \n      }\n    });\n   }\n  /**Función que redirige de forma programada */   \n  const redireccionarEdicion = usuario => {\n    dispatch( obtenerUsuarioEditarAction(usuario));\n    history.push(`/usuarios/editar/${usuario.id}`)\n  }\n\n   return ( \n        <tr>          \n          <td>{nombre}</td>\n          <td>{cedula}</td>\n          <td className=\"acciones\">\n            <button\n                type=\"button\"\n                onClick={()=> redireccionarEdicion(usuario)}\n                className= \"btn btn-primary mr-2\"\n                >Editar\n            </button>\n            <button \n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={() => confirmarEliminarUsuario(id)}\n              >Eliminar\n            </button>\n          </td>\n        </tr>\n    );\n }\n  \n export default Usuario;","import React, {Fragment, useEffect} from 'react';\n/**Redux */\nimport {useSelector,useDispatch} from 'react-redux';\nimport {obtenerUsuariosAction} from '../actions/usuarioActions';\nimport Usuario from './Usuario'\n\n\nconst Usuarios = () => {\n\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    /**Consultar api */\n    const cargarUsuarios = () => dispatch (obtenerUsuariosAction());\n    cargarUsuarios();\n    // eslint-disable-next-line\n  },[]);\n\n  const usuarios = useSelector(state => state.usuarios.usuarios);\n  const error = useSelector(state => state.usuarios.error);\n  const cargando = useSelector(state => state.usuarios.loading);\n\n  return (\n    <Fragment>\n      <h2 className=\"text-center my-5\">Listado de Usuarios</h2>\n\n      { error ? <p className=\"font-weight-bold alert alert-danger text-center\n      mt-4\">Hubo un error</p>: null}\n      { cargando ? <p className=\"text-center\">Cargando...</p>: null}\n\n      <table className=\"table table-striped\">\n        <thead className=\"bg-primary table-dark\">\n            <tr>\n              <th scope=\"col\">Nombres</th>\n              <th scope=\"col\">Cedula</th>\n              <th scope=\"col\">Acciones</th>\n            </tr>\n        </thead>\n        <tbody>\n          { usuarios.length === 0 ? (<tr><td colSpan={3}>No hay usuarios</td></tr>) : (\n            usuarios.map(usuario => (\n              <Usuario\n                key={usuario.id}\n                usuario={usuario}\n              />\n            ))\n          )}\n        </tbody>\n      </table>\n    </Fragment>\n   );\n}\n\nexport default Usuarios;\n","import {\n  MOSTRAR_ALERTA,\n  OCULTAR_ALERTA\n}from '../types';\n\n/**Mostrar alerta no usamos async ni await por lo que\n * no consultamos bases de datos\n*/\nexport function mostrarAlertaAction(alerta){\n  return(dispatch)=>{\n    dispatch(mostrarAlertaError(alerta))\n  }\n}\n\nconst mostrarAlertaError = alerta => ({\n  type: MOSTRAR_ALERTA,\n  payload: alerta\n})\n\n\n/**Ocultar alerta */\nexport function ocultarAlertaAction(){\n  return (dispatch) =>{\n    dispatch ( ocultarAlerta())\n  }\n}\n\nconst ocultarAlerta = () => ({\n  type: OCULTAR_ALERTA\n})","import React,{useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux'\n\n/**Actions Redux */\nimport { crearNuevoUsuarioAction } from '../actions/usuarioActions'\nimport { mostrarAlertaAction, ocultarAlertaAction } from '../actions/alertaActions';\n\nconst NuevoUsuario = (props) => {\n\n    console.log(\"propiedades\");\n    console.log(props);\n  /**State del componente */\n  const [nombre, guardarnombre] = useState('');\n  const [cedula, guardarCedula] = useState('');\n\n  /**Acceder al state del store */\n  const cargando = useSelector(state=>state.usuarios.state);\n  const error = useSelector(state => state.usuarios.error);\n  const alerta = useSelector(state => state.alerta.alerta);\n\n  /**Utilizar dispatch y crear funcion */\n  const dispatch = useDispatch();\n\n  /**Enviar la accion */\n  const agregarUsuario = (usuario) => dispatch(crearNuevoUsuarioAction (usuario));\n\n  /**Enviando Datos */\n  const submitNuevoUsuario = e =>{\n    e.preventDefault();\n\n    /**Validar Formulario */\n    if(nombre.trim() === '' || cedula.trim() ===''){\n      const alerta = {\n        msg:'Campos Obligatorios',\n        classes: 'alert alert-danger text-center text-uppercase p3'\n      }\n\n      dispatch(mostrarAlertaAction(alerta));\n      return;\n    }\n\n    /**Si no hay errores */\n    dispatch(ocultarAlertaAction());\n\n    /**Crear nuevo usuario */\n    agregarUsuario({\n      nombre,\n      cedula\n    });\n\n    /**Redireccionar */\n    props.info.history.push('/');\n  }\n\n  return (\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n\n                <h2 className=\"text-center mb-4 font-weight-bold\">\n                    Agregar Nuevo Usuario\n                </h2>\n\n                  {alerta ? <p className={alerta.classes}>{alerta.msg}</p> : null}\n\n                <form\n                  onSubmit={submitNuevoUsuario}\n                >\n\n                  <div className=\"form-group\">\n                        <label>Nombres</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Nombre Usuario\"\n                          name=\"nombre\"\n                          value={nombre}\n                          onChange={e => guardarnombre(e.target.value)}\n                        />\n                  </div>\n\n                  <div className=\"form-group\">\n                        <label>Cedula</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Cedula\"\n                          name=\"cedula\"\n                          value={cedula}\n                          onChange={e => guardarCedula(e.target.value)}\n                        />\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                    >Agregar\n                  </button>\n\n                </form>\n\n                {cargando ? <p>Cargando..</p>: null}\n                {error ? <p className=\"alert alert-danger p2 mt-4 text-center\">Hubo un error yyyy</p> : null}\n\n              </div>\n            </div>\n        </div>\n      </div>\n   );\n}\n\nexport default NuevoUsuario;\n","import React, {useState,useEffect} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { editarUsuarioAction } from '../actions/usuarioActions';\nimport { useHistory } from 'react-router-dom';/**Redireccionamiento  */\n\nconst EditarUsuario = () => {\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  /**Nuevo state */\n  const [usuario, guardarUsuario] = useState({\n    nombre:'',\n    cedula:''\n  });\n\n  /**Usuario a editar */\n  const usuarioEditar = useSelector(state => state.usuarios.usuarioEditar);\n\n  /**Llenado de información edición */\n  useEffect(() => {\n    guardarUsuario(usuarioEditar)\n  }, [usuarioEditar])\n\n  /**Leer los datos del formulario */\n  const onChangeFormulario = e => {\n    guardarUsuario({\n      ...usuario,\n      [e.target.name] : e.target.value\n    })\n  }\n\n  const {nombre, cedula} = usuario;\n\n  const submitEditarUsuario = e =>{\n    e.preventDefault();\n\n    dispatch(editarUsuarioAction(usuario));;\n    history.push('/');\n  }\n\n  return (\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h2 className=\"text-center mb-4 font-weight-bold\">\n                Editar Usuario\n              </h2>\n\n              <form\n                onSubmit={submitEditarUsuario}\n              >\n                <div className=\"form-group\">\n                  <label>Nombres</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Nombre Usuario\"\n                    name=\"nombre\"\n                    value={nombre}\n                    onChange={onChangeFormulario}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Cedula</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Cedula\"\n                    name=\"cedula\"\n                    value={cedula}\n                    onChange={onChangeFormulario}\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                >\n                  Guardar Cambios\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nexport default EditarUsuario;\n","import {\n  LOGIN_EXITO\n}from '../types';\n\nexport function mostrarEstadoLoginAction(login){\n  return(dispatch)=>{\n    dispatch(mostrarloginError(login))\n  }\n}\n\nconst mostrarloginError = login => ({\n  type: LOGIN_EXITO,\n  payload: login\n})","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/**Actions Redux */\nimport {mostrarAlertaAction, ocultarAlertaAction} from \"../actions/alertaActions\";\nimport {mostrarEstadoLoginAction} from '../actions/estadoLoginActions'\nimport styled from 'styled-components'\n\nconst Contenedor = styled.div`\n  max-width: 700px;\n  margin: 0 auto;\n  margin-top: 200px;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: 1fr;\n    column-gap: 2rem;\n}`;\n\nconst Login = () => {\n  /**State del componente */\n  const [nombre, guardarnombre] = useState(\"\");\n  const [cedula, guardarCedula] = useState(\"\");\n\n  /**Acceder al state del store */\n  const cargando = useSelector((state) => state.usuarios.state);\n  const error = useSelector((state) => state.usuarios.error);\n  const alerta = useSelector((state) => state.alerta.alerta);\n\n  /**Utilizar dispatch y crear funcion */\n  const dispatch = useDispatch();\n\n  /**Enviando Datos */\n  const submitNuevoUsuario = (e) => {\n    e.preventDefault();\n\n    /**Validar Formulario */\n    if (nombre.trim() === \"\" || cedula.trim() === \"\") {\n      const alerta = {\n        msg: \"Campos Obligatorios\",\n        classes: \"alert alert-danger text-center text-uppercase p3\",\n      };\n\n      dispatch(mostrarAlertaAction(alerta));\n      dispatch(mostrarEstadoLoginAction(true))\n      return;\n    }\n\n    /**Si no hay errores */\n    dispatch(ocultarAlertaAction());\n    dispatch(mostrarEstadoLoginAction(false))    \n  };\n\n  return (\n    <Contenedor>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h2 className=\"text-center mb-4 font-weight-bold\">Login</h2>\n\n              {alerta ? <p className={alerta.classes}>{alerta.msg}</p> : null}\n\n              <form onSubmit={submitNuevoUsuario}>\n                <div className=\"form-group\">\n                  <label>Usuario y/o Correo</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Usuario\"\n                    name=\"nombre\"\n                    value={nombre}\n                    onChange={(e) => guardarnombre(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Cedula</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Cedula\"\n                    name=\"cedula\"\n                    value={cedula}\n                    onChange={(e) => guardarCedula(e.target.value)}\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                >\n                  Ingresar\n                </button>\n              </form>\n\n              {cargando ? <p>Cargando..</p> : null}\n              {error ? (\n                <p className=\"alert alert-danger p2 mt-4 text-center\">\n                  Hubo un error\n                </p>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n  </Contenedor>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\nfunction NavBar(props) {\n    return(\n        <React.Fragment>\n            <SideNav\n                onSelect={(selected) => {\n                    // Add your code here\n                    const to = '/' + selected;\n                    if (props.info.location.pathname !== to) {\n                        props.info.history.push(to);\n                    }\n                }}\n            >\n                <SideNav.Toggle />\n                <SideNav.Nav defaultSelected=\"home\">\n                    <NavItem eventKey=\"home\">\n                        <NavIcon>\n                            <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Home\n                        </NavText>\n                    </NavItem>\n                    <NavItem eventKey=\"charts\">\n                        <NavIcon>\n                            <i className=\"fa fa-fw fa-line-chart\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Charts\n                        </NavText>\n                        <NavItem eventKey=\"charts/linechart\">\n                            <NavText>\n                                Line Chart\n                            </NavText>\n                        </NavItem>\n                        <NavItem eventKey=\"charts/barchart\">\n                            <NavText>\n                                Bar Chart\n                            </NavText>\n                        </NavItem>\n                    </NavItem>\n                    <NavItem eventKey=\"iraForm\">\n                        <NavIcon>\n                            <i className=\"fa fa-fw fa-line-chart\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Formulario\n                        </NavText>\n                    </NavItem>\n                </SideNav.Nav>\n            </SideNav>\n            {props.children}\n        </React.Fragment>\n    )\n}\n\n\nexport default NavBar;\n","import React, { useEffect, useState } from \"react\";\nimport { Offline, Online } from 'react-detect-offline'\n\nconst IraForm = ({db}) => {\n    // store form values in a state hook\n    const [names, setNames] = useState({ firstname: '', lastname: '' });\n\n    // set firstname and lastname to whatever is in the database\n    // if no values are in the database, set the database values to ''\n    useEffect(\n        () => {\n            // create the store\n            db.version(1).stores({ formData: 'id,value' });\n\n            // perform a read/write transatiction on the new store\n            db.transaction('rw', db.formData, async () => {\n                // get the first and last name from the data\n                const dbFirstname = await db.formData.get('firstname');\n                const dbLastname = await db.formData.get('lastname');\n\n                // if the first or last name fields have not be added, add them\n                if (!dbFirstname) await db.formData.add({ id: 'firstname', value: '' });\n                if (!dbLastname) await db.formData.add({ id: 'lastname', value: '' });\n\n                // set the initial values\n                setNames({\n                    firstname: dbFirstname ? dbFirstname.value : '',\n                    lastname: dbLastname ? dbLastname.value : ''\n                })\n            }).catch(e => {\n                // log any errors\n                console.log(e.stack || e)\n            });\n\n            // close the database connection if form is unmounted or the\n            // database connection changes\n            return () => db.close();\n        },\n        // run effect whenever the database connection changes\n        [db]\n    )\n\n    // sets the name in the store and in the state hook\n    const setName = id => value => {\n        // update the store\n        db.formData.put({ id, value });\n        // update the state hook\n        setNames(prevNames => ({ ...prevNames, [id]: value }));\n    }\n\n    // partial application to make on change handler easier to deal with\n    const handleSetName = id => e => setName(id)(e.target.value);\n\n    // when the form is submitted, prevent the default action\n    // which reloads the page and reset the first and last name\n    // in both the store and in the state hook\n    const handleSubmit = e => {\n        e.preventDefault();\n        setName('firstname')('');\n        setName('lastname')('');\n    }\n\n    return (<form onSubmit={handleSubmit}>\n        <span>Nombre:</span>\n        <br />\n        <input\n            type=\"text\"\n            name=\"firstname\"\n            value={names.firstname}\n            onChange={handleSetName('firstname')}\n        />\n        <br />\n        <span>Apellido:</span>\n        <br />\n        <input\n            type=\"text\"\n            name=\"lastname\"\n            value={names.lastname}\n            onChange={handleSetName('lastname')}\n        />\n        <br />\n        {/* Handle whether or not the user is offline */}\n        <Online>\n            <input type=\"submit\" value=\"Submit\" />\n        </Online>\n        <Offline>You are currently offline!</Offline>\n    </form>\n    )\n}\n\nexport default IraForm;\n","/**2. Importar Reducers */\nimport {\n  AGREGAR_USUARIO,\n  AGREGAR_USUARIO_EXITO,\n  AGREGAR_USUARIO_ERROR,\n  COMENZAR_OBTENER_USUARIOS,\n  DESCARGA_USUARIOS_EXITO,\n  DESCARGA_USUARIOS_ERROR,\n  OBTENER_USUARIO_ELIMINAR,\n  USUARIO_ELIMINADO_EXITO,\n  USUARIO_ELIMINADO_ERROR,\n  OBTENER_USUARIO_EDITAR,\n  USUARIO_EDITADO_EXITO,\n  USUARIO_EDITADO_ERROR\n} from \"../types\";\n\n/**1. Cada reducer tiene su propio state */\nconst initialState = {\n  usuarios: [],\n  error: null,\n  loading: false,\n  usuarioEliminar: null,\n  usuarioEditar: null\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case COMENZAR_OBTENER_USUARIOS:\n    case AGREGAR_USUARIO:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    case AGREGAR_USUARIO_EXITO:\n      return {\n        ...state,\n        loading: false,\n        usuarios: [...state.usuarios, action.payload],\n      };\n    case AGREGAR_USUARIO_ERROR:\n    case DESCARGA_USUARIOS_ERROR:\n    case USUARIO_ELIMINADO_ERROR:\n    case USUARIO_EDITADO_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case DESCARGA_USUARIOS_EXITO:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        usuarios: action.payload,\n      };\n    case OBTENER_USUARIO_ELIMINAR:\n      return {\n        ...state,\n        usuarioEliminar: action.payload        \n      }\n    case USUARIO_ELIMINADO_EXITO:\n      return{\n        ...state,\n        usuarios: state.usuarios.filter(usuario => usuario.id !== state.usuarioEliminar),\n        usuarioEliminar: null        \n      }\n    case OBTENER_USUARIO_EDITAR:\n      return{\n        ...state,\n        usuarioEditar: action.payload\n      }\n    case USUARIO_EDITADO_EXITO:\n      return {\n        ...state,\n        usuarioEditar:null,\n        usuarios: state.usuarios.map(usuario => \n            usuario.id === action.payload.id ? usuario = action.payload : usuario\n          )\n      }\n    default:\n      return state;\n  }\n}\n","import {\n  MOSTRAR_ALERTA,\n  OCULTAR_ALERTA\n}from '../types';\n\n/**Cada reducer debe tener su propio state */\nconst initialState = {\n  alerta: null\n}\n\n function adminAlert(state = initialState, action){\n  switch(action.type){\n    case MOSTRAR_ALERTA:\n      return{\n        ...state,\n        alerta: action.payload\n      }\n    case OCULTAR_ALERTA:\n      return{\n        ...state,\n        alerta: null\n      }\n    default:\n      return state;\n  }\n}\n\nexport default adminAlert;","import {\n  LOGIN_EXITO\n}from '../types';\n\nconst initialState = {\n  login: null\n}\n\nexport default function (state = initialState, action){\n  switch(action.type){\n    case LOGIN_EXITO:\n      return{\n        ...state,\n        login: action.payload\n      }    \n    default:\n      return state;\n  }\n}","import {combineReducers} from 'redux'\nimport usuariosReducer from './usuariosReducer';\nimport alertaReducer from './alertaReducer';\nimport loginReducer from './loginReducer'\n\nexport default combineReducers({\n  usuarios: usuariosReducer,\n  alerta: alertaReducer,\n  login: loginReducer\n});\n\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';/**Index.js */\n\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(thunk) /**Solo se pasa si usamos el thunk */,\n    /**Sirve para ver la herramienta developer tools de redux */\n    /**Si no esta instalado devtools debemos anexar este codigo para que no se rompa en otro nav */\n    typeof window === 'object'  && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !=='undefined' ?\n     window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n  )\n);\n\nexport default store;\n\n","import React, { useState } from \"react\";\nimport Header from \"./components/shared/Header\";\nimport Usuarios from \"./components/Usuarios\";\nimport NuevoUsuario from \"./components/NuevoUsuario\";\nimport EditarUsuario from \"./components/EditarUsuario\";\nimport Login from \"./components/Login\";\nimport NavBar from \"./components/shared/NavBar\";\nimport IraForm from \"./components/ira-form\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Dexie from \"dexie\";\n\n/**Redux */\nimport { Provider, useSelector,useDispatch } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n\n  const [login, mostrarLogin] = useState(false);\n\n  return (\n    <Router>\n      <Provider store={store}>\n        { login ? <Login/> :\n            <React.Fragment>\n              <Header />\n              <div className=\"container mt-5\">\n                <Switch>\n                  <Route exact path=\"/\" render={(props) => <NavBar info={props}> <Usuarios info={props} /> </NavBar>} />\n                  <Route exact path=\"/usuarios/nuevo\" render={(props) => <NavBar info={props}> <NuevoUsuario info={props} /> </NavBar>}/>\n                  <Route exact path=\"/usuarios/editar/:id\" render={(props) => <NavBar info={props}> <EditarUsuario info={props} /> </NavBar>}/>\n                  <Route exact path=\"/iraForm\" render={(props) => <NavBar info={props}> <IraForm db={new Dexie('FormDatabase')} /> </NavBar>} />\n                </Switch>\n              </div>\n            </React.Fragment>\n        }\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n\n/**1. React router dom npm i react-router-dom */\n/**2. Instalar json-server npm install -g json-server\n * desplegar el json.server\n * json-server db.json --port 4000\n */\n/**3. Configuración en Redux\n * npm i react-redux redux redux-thunk\n */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}