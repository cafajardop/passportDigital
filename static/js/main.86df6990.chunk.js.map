{"version":3,"sources":["components/Header.js","types/index.js","config/axios.js","actions/usuarioActions.js","components/Usuario.js","components/Usuarios.js","actions/alertaActions.js","components/NuevoUsuario.js","components/EditarUsuario.js","reducers/usuariosReducer.js","reducers/alertaReducer.js","reducers/index.js","store.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Header","className","to","AGREGAR_USUARIO","AGREGAR_USUARIO_EXITO","AGREGAR_USUARIO_ERROR","COMENZAR_OBTENER_USUARIOS","DESCARGA_USUARIOS_EXITO","DESCARGA_USUARIOS_ERROR","OBTENER_USUARIO_ELIMINAR","USUARIO_ELIMINADO_EXITO","USUARIO_ELIMINADO_ERROR","OBTENER_USUARIO_EDITAR","USUARIO_EDITADO_EXITO","USUARIO_EDITADO_ERROR","MOSTRAR_ALERTA","OCULTAR_ALERTA","clienteAxios","axios","create","baseURL","agreagarUsuario","type","payload","agregarUsuarioExito","usuario","agregarUsuarioError","estado","obtenerUsuarios","getUsuariosExito","usuarios","getUsuariosError","obtenerUsuarioEliminar","id","eliminarUsuarioExito","eliminarUsuarioError","obtenerUsuarioEditar","editarUsuario","editarUsuarioExito","editarUsuarioError","Usuario","nombre","cedula","dispatch","useDispatch","history","useHistory","confirmarEliminarUsuario","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","a","delete","console","log","borrarUsuarioAction","redireccionarEdicion","obtenerUsuarioEditarAction","push","onClick","Usuarios","useEffect","get","respuesta","data","useSelector","state","error","cargando","loading","scope","length","map","mostrarAlertaError","alerta","ocultarAlerta","NuevoUsuario","useState","guardarnombre","guardarCedula","agregarUsuario","post","crearNuevoUsuarioAction","classes","msg","onSubmit","e","preventDefault","trim","mostrarAlertaAction","placeholder","name","value","onChange","target","EditarUsuario","guardarUsuario","usuarioEditar","onChangeFormulario","put","editarUsuarioAction","initialState","usuarioEliminar","combineReducers","action","filter","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.86df6990.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-between\">\r\n        <div className=\"container\">\r\n          <h1>\r\n              <Link to={'/'} \r\n                    className=\"text-light\">Pasaporte Digital\r\n              </Link>\r\n          </h1>\r\n        </div>\r\n\r\n        <Link \r\n          to={\"/usuarios/nuevo\"}\r\n          className=\"btn btn-danger nuevo-post d-block d-md-inline-block\">\r\n            Nuevo Usuario &#43;\r\n        </Link>\r\n    </nav>\r\n  );\r\n}\r\n \r\nexport default Header;","export const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\r\nexport const AGREGAR_USUARIO_EXITO  = 'AGREGAR_USUARIO_EXITO';\r\nexport const AGREGAR_USUARIO_ERROR  = 'AGREGAR_USUARIO_ERROR';\r\n\r\nexport const COMENZAR_OBTENER_USUARIOS = 'COMENZAR_OBTENER_USUARIOS';\r\nexport const DESCARGA_USUARIOS_EXITO = 'DESCARGA_USUARIOS_EXITO';\r\nexport const DESCARGA_USUARIOS_ERROR = 'DESCARGA_USUARIOS_ERROR';\r\n\r\nexport const OBTENER_USUARIO_ELIMINAR = 'OBTENER_USUARIO_ELIMINAR';\r\nexport const USUARIO_ELIMINADO_EXITO = 'USUARIO_ELIMINADO_EXITO';\r\nexport const USUARIO_ELIMINADO_ERROR = 'USUARIO_ELIMINADO_ERROR';\r\n\r\nexport const OBTENER_USUARIO_EDITAR = 'OBTENER_USUARIO_EDITAR';\r\nexport const COMENZAR_EDITAR_USUARIO = 'COMENZAR_EDITAR_USUARIO';\r\nexport const USUARIO_EDITADO_EXITO = 'USUARIO_EDITADO_EXITO';\r\nexport const USUARIO_EDITADO_ERROR = 'USUARIO_EDITADO_ERROR';\r\n\r\n/**Alertas */\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';","//**Instalacion de axios npm i axios */\r\nimport axios from 'axios'\r\n\r\nconst clienteAxios = axios.create({\r\n  baseURL:'http://localhost:4000/'\r\n});\r\n\r\nexport default clienteAxios;","import {\r\n  AGREGAR_USUARIO,\r\n  AGREGAR_USUARIO_EXITO,\r\n  AGREGAR_USUARIO_ERROR,\r\n  COMENZAR_OBTENER_USUARIOS,\r\n  DESCARGA_USUARIOS_EXITO,\r\n  DESCARGA_USUARIOS_ERROR,\r\n  OBTENER_USUARIO_ELIMINAR,\r\n  USUARIO_ELIMINADO_EXITO,\r\n  USUARIO_ELIMINADO_ERROR,\r\n  OBTENER_USUARIO_EDITAR,\r\n  COMENZAR_EDITAR_USUARIO,\r\n  USUARIO_EDITADO_EXITO,\r\n  USUARIO_EDITADO_ERROR\r\n} from \"../types\";\r\n\r\nimport clienteAxios from \"../config/axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n/**Creacion de usuarios */\r\nexport function crearNuevoUsuarioAction(usuario) {\r\n  return async (dispatch) => {\r\n    dispatch(agreagarUsuario());\r\n    /**Consulta a la base de datos */\r\n    try {\r\n      await clienteAxios.post(\"/usuarios\", usuario);\r\n      dispatch(agregarUsuarioExito(usuario));\r\n      Swal.fire(\r\n        \"Correcto\",\r\n        `El Usuario con el id: ${usuario.cedula} se creo correctamente`,\r\n        \"success\"\r\n      );\r\n    } catch (error) {\r\n      dispatch(agregarUsuarioError(true));\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Hubo un error\",\r\n        text: \"Hubo un error, intenta de nuevo\",\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nconst agreagarUsuario = () => ({\r\n  type: AGREGAR_USUARIO,\r\n  payload: true,\r\n});\r\n\r\n/**Si usuario se guarda en la base de datos */\r\nconst agregarUsuarioExito = (usuario) => ({\r\n  type: AGREGAR_USUARIO_EXITO,\r\n  payload: usuario,\r\n});\r\n\r\n/**Si hay error */\r\nconst agregarUsuarioError = (estado) => ({\r\n  type: AGREGAR_USUARIO_ERROR,\r\n  payload: estado,\r\n});\r\n\r\n/**Función que obtiene los usuarios de la BD */\r\nexport function obtenerUsuariosAction() {\r\n  return async (dispatch) => {\r\n    dispatch(obtenerUsuarios());\r\n    try {\r\n      const respuesta = await clienteAxios.get(\"/usuarios\");\r\n      dispatch(getUsuariosExito(respuesta.data));\r\n    } catch (error) {\r\n      dispatch(getUsuariosError());\r\n    }\r\n  };\r\n}\r\n\r\nconst obtenerUsuarios = () => ({\r\n  type: COMENZAR_OBTENER_USUARIOS,\r\n  payload: true,\r\n});\r\n\r\nconst getUsuariosExito = (usuarios) => ({\r\n  type: DESCARGA_USUARIOS_EXITO,\r\n  payload: usuarios,\r\n});\r\n\r\nconst getUsuariosError = () => ({\r\n  type: DESCARGA_USUARIOS_ERROR,\r\n  payload: true,\r\n});\r\n\r\n\r\n/**Selecciona y elimina usuario */\r\nexport function borrarUsuarioAction(id){\r\n  return async (dispatch)=>{\r\n    dispatch(obtenerUsuarioEliminar(id));\r\n    try {\r\n        await clienteAxios.delete(`/usuarios/${id}`)\r\n        dispatch( eliminarUsuarioExito());\r\n\r\n        Swal.fire(\r\n          'Eliminado!',\r\n          'El usuario se eliminó correctamente.',\r\n          'success'\r\n        )\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch( eliminarUsuarioError() );\r\n    }\r\n  }\r\n}\r\n\r\nconst obtenerUsuarioEliminar = id => ({\r\n  type: OBTENER_USUARIO_ELIMINAR,\r\n  payload: id\r\n});\r\n\r\nconst eliminarUsuarioExito = () =>({\r\n    type:USUARIO_ELIMINADO_EXITO\r\n})\r\n\r\nconst eliminarUsuarioError = () => ({\r\n  type: USUARIO_ELIMINADO_ERROR,\r\n  payload: true\r\n})\r\n\r\n//**Edición de usuario */\r\nexport function obtenerUsuarioEditarAction(usuario){\r\n  return(dispatch)=>{\r\n    dispatch(obtenerUsuarioEditar(usuario))\r\n  }\r\n}\r\n\r\nconst obtenerUsuarioEditar = usuario => ({\r\n  type: OBTENER_USUARIO_EDITAR,\r\n  payload: usuario\r\n})\r\n\r\n/**Actualiza un registro en la api y state */\r\nexport function editarUsuarioAction(usuario){\r\n  return async (dispatch) =>{\r\n    dispatch(editarUsuario(usuario));\r\n    try {\r\n      await clienteAxios.put(`/usuarios/${usuario.id}`,usuario);\r\n      dispatch(editarUsuarioExito(usuario))\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(editarUsuarioError())    \r\n    }\r\n  }\r\n}\r\n\r\nconst editarUsuario = usuario => ({\r\n  type: COMENZAR_EDITAR_USUARIO,\r\n  payload: usuario\r\n});\r\n\r\nconst editarUsuarioExito = usuario => ({\r\n  type:USUARIO_EDITADO_EXITO,\r\n  payload:usuario\r\n});\r\n\r\nconst editarUsuarioError = () => ({\r\n  type: USUARIO_EDITADO_ERROR,\r\n  payload: true\r\n});\r\n\r\n","import React from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport Swal from 'sweetalert2';\r\n\r\n/**Redux */\r\nimport {useDispatch} from 'react-redux';\r\nimport {borrarUsuarioAction,obtenerUsuarioEditarAction} from '../actions/usuarioActions'; \r\n\r\n const Usuario = ({usuario}) => {\r\n   const { nombre, cedula , id } = usuario\r\n\r\n   const dispatch = useDispatch();\r\n   const history = useHistory();/**Habilitar history para redirección */\r\n\r\n   /**Confirmacion de eliminar el usuario */\r\n   const confirmarEliminarUsuario = id => {\r\n\r\n    Swal.fire({\r\n      title: 'Esta seguro?',\r\n      text: \"Un usuario que se elimina no se puede recuperar!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, eliminar!',\r\n      cancelButtonText:'Cancelar'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        /**Pasarlo al action */\r\n          dispatch(borrarUsuarioAction(id));        \r\n      }\r\n    });\r\n   }\r\n  /**Función que redirige de forma programada */   \r\n  const redireccionarEdicion = usuario => {\r\n    dispatch( obtenerUsuarioEditarAction(usuario));\r\n    history.push(`/usuarios/editar/${usuario.id}`)\r\n  }\r\n\r\n   return ( \r\n        <tr>          \r\n          <td>{nombre}</td>\r\n          <td>{cedula}</td>\r\n          <td className=\"acciones\">\r\n            <button\r\n                type=\"button\"\r\n                onClick={()=> redireccionarEdicion(usuario)}\r\n                className= \"btn btn-primary mr-2\"\r\n                >Editar\r\n            </button>\r\n            <button \r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => confirmarEliminarUsuario(id)}\r\n              >Eliminar\r\n            </button>\r\n          </td>\r\n        </tr>\r\n    );\r\n }\r\n  \r\n export default Usuario;","import React, {Fragment, useEffect} from 'react';\r\n/**Redux */\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {obtenerUsuariosAction} from '../actions/usuarioActions';\r\nimport Usuario from './Usuario'\r\n\r\n\r\nconst Usuarios = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(()=>{\r\n    /**Consultar api */\r\n    const cargarUsuarios = ()=> dispatch (obtenerUsuariosAction());\r\n    cargarUsuarios();\r\n    // eslint-disable-next-line\r\n  },[]);\r\n\r\n  const usuarios = useSelector(state => state.usuarios.usuarios);\r\n  const error = useSelector(state => state.usuarios.error);\r\n  const cargando = useSelector(state => state.usuarios.loading);\r\n\r\n  return ( \r\n    <Fragment>\r\n      <h2 className=\"text-center my-5\">Listado de Usuarios</h2>\r\n\r\n      { error ? <p className=\"font-weight-bold alert alert-danger text-center \r\n      mt-4\">Hubo un error</p>: null}\r\n      { cargando ? <p className=\"text-center\">Cargando...</p>: null}\r\n      \r\n      <table className=\"table table-striped\">\r\n        <thead className=\"bg-primary table-dark\">\r\n            <tr>\r\n              <th scope=\"col\">Nombres</th>\r\n              <th scope=\"col\">Cedula</th>\r\n              <th scope=\"col\">Acciones</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n          { usuarios.length === 0 ? 'No hay usuarios': (\r\n            usuarios.map(usuario => (\r\n              <Usuario \r\n                key={usuario.id} \r\n                usuario={usuario}\r\n              />\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n   );\r\n}\r\n \r\nexport default Usuarios;\r\n","import {\r\n  MOSTRAR_ALERTA,\r\n  OCULTAR_ALERTA\r\n}from '../types';\r\n\r\n/**Mostrar alerta no usamos async ni await por lo que\r\n * no consultamos bases de datos\r\n*/\r\nexport function mostrarAlertaAction(alerta){\r\n  return(dispatch)=>{\r\n    dispatch(mostrarAlertaError(alerta))\r\n  }\r\n}\r\n\r\nconst mostrarAlertaError = alerta => ({\r\n  type: MOSTRAR_ALERTA,\r\n  payload: alerta\r\n})\r\n\r\n\r\n/**Ocultar alerta */\r\nexport function ocultarAlertaAction(){\r\n  return (dispatch) =>{\r\n    dispatch ( ocultarAlerta())\r\n  }\r\n}\r\n\r\nconst ocultarAlerta = () => ({\r\n  type: OCULTAR_ALERTA\r\n})","import React,{useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n/**Actions Redux */\r\nimport { crearNuevoUsuarioAction } from '../actions/usuarioActions'\r\nimport { mostrarAlertaAction, ocultarAlertaAction } from '../actions/alertaActions';\r\n\r\nconst NuevoUsuario = ({history}) => {\r\n\r\n  /**State del componente */\r\n  const [nombre, guardarnombre] = useState('');\r\n  const [cedula, guardarCedula] = useState('');\r\n\r\n  /**Acceder al state del store */\r\n  const cargando = useSelector(state=>state.usuarios.state);\r\n  const error = useSelector(state => state.usuarios.error);\r\n  const alerta = useSelector(state => state.alerta.alerta);\r\n \r\n  /**Utilizar dispatch y crear funcion */\r\n  const dispatch = useDispatch();\r\n\r\n  /**Enviar la accion */\r\n  const agregarUsuario = (usuario) => dispatch(crearNuevoUsuarioAction (usuario));\r\n\r\n  /**Enviando Datos */\r\n  const submitNuevoUsuario = e =>{\r\n    e.preventDefault();\r\n\r\n    /**Validar Formulario */    \r\n    if(nombre.trim() === '' || cedula.trim() ===''){\r\n      const alerta = {\r\n        msg:'Campos Obligatorios',\r\n        classes: 'alert alert-danger text-center text-uppercase p3'\r\n      }\r\n\r\n      dispatch(mostrarAlertaAction(alerta));\r\n      return;\r\n    }\r\n\r\n    /**Si no hay errores */\r\n    dispatch(ocultarAlertaAction());\r\n\r\n    /**Crear nuevo usuario */\r\n    agregarUsuario({\r\n      nombre,\r\n      cedula\r\n    });\r\n\r\n    /**Redireccionar */\r\n    history.push('/');\r\n  }\r\n\r\n  return (     \r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                \r\n                <h2 className=\"text-center mb-4 font-weight-bold\">\r\n                    Agregar Nuevo Usuario\r\n                </h2>\r\n\r\n                  {alerta ? <p className={alerta.classes}>{alerta.msg}</p> : null}\r\n\r\n                <form\r\n                  onSubmit={submitNuevoUsuario}\r\n                >\r\n                  \r\n                  <div className=\"form-group\">\r\n                        <label>Nombres</label>\r\n                        <input \r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Nombre Usuario\"\r\n                          name=\"nombre\"\r\n                          value={nombre}\r\n                          onChange={e => guardarnombre(e.target.value)}\r\n                        />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                        <label>Cedula</label>\r\n                        <input \r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Cedula\"\r\n                          name=\"cedula\"\r\n                          value={cedula}\r\n                          onChange={e => guardarCedula(e.target.value)}\r\n                        />\r\n                  </div>\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\r\n                    >Agregar\r\n                  </button>\r\n                \r\n                </form>\r\n                \r\n                {cargando ? <p>Cargando..</p>: null}\r\n                {error ? <p className=\"alert alert-danger p2 mt-4 text-center\">Hubo un error</p> : null}\r\n                \r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n   );\r\n}\r\n \r\nexport default NuevoUsuario;\r\n","import React, {useState,useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { editarUsuarioAction } from '../actions/usuarioActions';\r\nimport { useHistory } from 'react-router-dom';/**Redireccionamiento  */ \r\n\r\nconst EditarUsuario = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  /**Nuevo state */\r\n  const [usuario, guardarUsuario] = useState({\r\n    nombre:'',\r\n    cedula:''\r\n  })\r\n\r\n  /**Usuario a editar */\r\n  const usuarioEditar = useSelector(state => state.usuarios.usuarioEditar);\r\n  \r\n  /**Llenado de información edición */\r\n  useEffect(() => {\r\n    guardarUsuario(usuarioEditar)    \r\n  }, [usuarioEditar])\r\n\r\n  /**Leer los datos del formulario */\r\n  const onChangeFormulario = e => {\r\n    guardarUsuario({\r\n      ...usuario,\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n  \r\n  const {nombre, cedula} = usuario;\r\n\r\n  const submitEditarUsuario = e =>{\r\n    e.preventDefault();\r\n\r\n    dispatch(editarUsuarioAction(usuario));;\r\n    history.push('/');\r\n  }\r\n\r\n  return (    \r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h2 className=\"text-center mb-4 font-weight-bold\">\r\n                Editar Usuario\r\n              </h2>\r\n\r\n              <form\r\n                onSubmit={submitEditarUsuario}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <label>Nombres</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Nombre Usuario\"\r\n                    name=\"nombre\"\r\n                    value={nombre}\r\n                    onChange={onChangeFormulario}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Cedula</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Cedula\"\r\n                    name=\"cedula\"\r\n                    value={cedula}\r\n                    onChange={onChangeFormulario}\r\n                  />\r\n                </div>\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\r\n                >\r\n                  Guardar Cambios\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default EditarUsuario;","/**2. Importar Reducers */\r\nimport {\r\n  AGREGAR_USUARIO,\r\n  AGREGAR_USUARIO_EXITO,\r\n  AGREGAR_USUARIO_ERROR,\r\n  COMENZAR_OBTENER_USUARIOS,\r\n  DESCARGA_USUARIOS_EXITO,\r\n  DESCARGA_USUARIOS_ERROR,\r\n  OBTENER_USUARIO_ELIMINAR,\r\n  USUARIO_ELIMINADO_EXITO,\r\n  USUARIO_ELIMINADO_ERROR,\r\n  OBTENER_USUARIO_EDITAR,\r\n  USUARIO_EDITADO_EXITO,\r\n  USUARIO_EDITADO_ERROR\r\n} from \"../types\";\r\n\r\n/**1. Cada reducer tiene su propio state */\r\nconst initialState = {\r\n  usuarios: [],\r\n  error: null,\r\n  loading: false,\r\n  usuarioEliminar: null,\r\n  usuarioEditar: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case COMENZAR_OBTENER_USUARIOS:\r\n    case AGREGAR_USUARIO:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    case AGREGAR_USUARIO_EXITO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        usuarios: [...state.usuarios, action.payload],\r\n      };\r\n    case AGREGAR_USUARIO_ERROR:\r\n    case DESCARGA_USUARIOS_ERROR:\r\n    case USUARIO_ELIMINADO_ERROR:\r\n    case USUARIO_EDITADO_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case DESCARGA_USUARIOS_EXITO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        usuarios: action.payload,\r\n      };\r\n    case OBTENER_USUARIO_ELIMINAR:\r\n      return {\r\n        ...state,\r\n        usuarioEliminar: action.payload        \r\n      }\r\n    case USUARIO_ELIMINADO_EXITO:\r\n      return{\r\n        ...state,\r\n        usuarios: state.usuarios.filter(usuario => usuario.id !== state.usuarioEliminar),\r\n        usuarioEliminar: null        \r\n      }\r\n    case OBTENER_USUARIO_EDITAR:\r\n      return{\r\n        ...state,\r\n        usuarioEditar: action.payload\r\n      }\r\n    case USUARIO_EDITADO_EXITO:\r\n      return {\r\n        ...state,\r\n        usuarioEditar:null,\r\n        usuarios: state.usuarios.map(usuario => \r\n            usuario.id === action.payload.id ? usuario = action.payload : usuario\r\n          )\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  MOSTRAR_ALERTA,\r\n  OCULTAR_ALERTA\r\n}from '../types';\r\n\r\n/**Cada reducer debe tener su propio state */\r\nconst initialState = {\r\n  alerta: null\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n  switch(action.type){\r\n    case MOSTRAR_ALERTA:\r\n      return{\r\n        ...state,\r\n        alerta: action.payload\r\n      }\r\n    case OCULTAR_ALERTA:\r\n      return{\r\n        ...state,\r\n        alerta: null\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import {combineReducers} from 'redux'\r\nimport usuariosReducer from './usuariosReducer';\r\nimport alertaReducer from './alertaReducer';\r\n\r\nexport default combineReducers({\r\n  usuarios: usuariosReducer,\r\n  alerta: alertaReducer\r\n});\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';/**Index.js */\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  compose(\r\n    applyMiddleware(thunk) /**Solo se pasa si usamos el thunk */,\r\n    /**Sirve para ver la herramienta developer tools de redux */\r\n    /**Si no esta instalado devtools debemos anexar este codigo para que no se rompa en otro nav */\r\n    typeof window === 'object'  && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !=='undefined' ?\r\n     window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n  )\r\n);\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Usuarios from \"./components/Usuarios\";\nimport NuevoUsuario from \"./components/NuevoUsuario\";\nimport EditarUsuario from \"./components/EditarUsuario\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n/**Redux */\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <Header />\n        <div className=\"container mt-5\">\n          <Switch>\n            <Route exact path=\"/\" component={Usuarios} />\n            <Route exact path=\"/usuarios/nuevo\" component={NuevoUsuario} />\n            <Route exact path=\"/usuarios/editar/:id\" component={EditarUsuario}\n            />\n          </Switch>\n        </div>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n\n/**1. React router dom npm i react-router-dom */\n/**2. Instalar json-server npm install -g json-server\n * desplegar el json.server\n * json-server db.json --port 4000\n */\n/**3. Configuración en Redux\n * npm i react-redux redux redux-thunk\n */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}